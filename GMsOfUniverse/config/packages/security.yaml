#security:
#    encoders:
#        App\Entity\User:
#            algorithm: auto
#
#    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#    providers:
#        # used to reload user from session & other features (e.g. switch_user)
#        app_user_provider:
#            entity:
#                class: App\Entity\User
#                property: email
#    #firewalls:
#    #    dev:
#    #        pattern: ^/(_(profiler|wdt)|css|images|js)/
#    #        security: false
#    #    main:
#    #        anonymous: lazy
#    firewalls:
#        main:
#            anonymous: ~
#            json_login:
#                check_path: /login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
#    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
security:
    encoders:
        App\Entity\User:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
        register:
            pattern: ^/register
            stateless: true
            anonymous: true
        calendar:
            pattern: ^/game/get_Calendar_anon
            stateless: true
            anonymous: true
        game:
            pattern: ^/game/get_game
            stateless: true
            anonymous: true
        participants:
            pattern: ^/game/get_Participants
            stateless: true
            anonymous: true
        types:
            pattern: ^/game/get_Types
            stateless: true
            anonymous: true
        post:
            pattern: ^/post/get_post
            stateless: true
            anonymous: true
        slider:
            pattern: ^/post/get_slider
            stateless: true
            anonymous: true
        api:
            pattern:   ^/
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/game/get_Calendar_anon, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/game/get_game, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/game/get_Participants, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/game/get_Types, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/post/get_post, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/post/get_slider, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/,      roles: IS_AUTHENTICATED_FULLY }